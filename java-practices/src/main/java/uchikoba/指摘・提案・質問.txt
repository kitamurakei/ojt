<全般>
■kadai1 OK
[修正済み]【指摘】円周計算が無いです。
⇒横着しました。作成しました。
[修正済み]【指摘】mensekiKeisanの戻り値が無いです。
⇒戻りました。

■kadai2 OK
[修正済み]【提案】print内容に年齢を含めた方が良いのでは？
⇒含めてみました。

■kadai3 OK
[修正済み]【提案】this.volume = this.volume - nondavolume;は、this.volume -= nondavolumeの方がシンプルでは？
⇒可読性を考慮してみましたが、これぐらいならOKかも。ということで修正してます。

■kadai4
[修正済み]【提案】やっている事が少ないのに行数が多すぎると思います。３項演算子を使う等してｼﾝﾌﾟﾙにすべきでは？
⇒なるほど。
[修正済み]【提案】judgeOddOrEvenという名前だけでは何が戻り値なのか想像するのが難しいです。is○○等の方が直感的では？
⇒おっしゃるとおり。isEvenNumber()へ変更し、ｺﾒﾝﾄも偶数判定にしています。
【提案】テストケース名がtestCase1,2...となっています。名前に意味を持たせた方が可読性が上がると思います。
⇒勘弁してもらえませんか？やります。
【提案】生のRuntimeExceptionを使う事は稀です。適切な意味を持つExceptionクラスを使用する方がクラス設計としては良いと思います。

■kadai5
[修正済み]【指摘】「底面の半径」の変数だけ日本語ローマ字になっています。(hankei
⇒rへ変更しました。
[修正済み]【提案】Cylinderクラスのコンストラクタが多数の振る舞いを持ってしまっています。インスタンスの生成に余計な処理時間が掛かる可能性があるので、必要な面積は実際に計算(calc)する時に計算してやるのはどうでしょうか？
⇒なるほど。コンストラクタに概念以外のもの（計算）が混じっていたため、修正しました。
[確認済み]【指摘】上記に関連し、現状、CylinderクラスにCircleクラス及びCircleクラスのインスタンス変数を持つ意味が皆無になっています。
⇒上記修正に伴い意味を持つようになりましたのでそのままにしてます。
[対応済み]【指摘】JUnitテストがありません。
⇒対応しました。
【質問】円柱の高さにRectangleの高さを使用しなかった理由はありますか？
【提案】ﾃｽﾄ対象ｲﾝｽﾀﾝｽのｾｯﾄｱｯﾌﾟは@BeforeClass（ｸﾗｽ単位）より@Before（ﾒｿｯﾄﾞ単位）で行う方が良いです。（CylinderTest）理由はﾃｽﾄﾒｿｯﾄﾞ実行中の振る舞いによって、ﾃｽﾄ対象ｲﾝｽﾀﾝｽのﾃﾞｰﾀ等が変更されてしまう可能性があるからです。
【提案】JUnit4では、assertEqualsよりもassertThatが推奨されています。（RectangleTest）

■kadai6
【提案】生のRuntimeExceptionを使う事は稀です。適切な意味を持つExceptionクラスを使用する方が設計が明確になると思います。

■kadai7
[修正済み]【提案】boolean型のresultを定義する意味が希薄ではないでしょうか？もう少しｼﾝﾌﾟﾙに出来るはずです。
⇒おっしゃるとおり。
[修正済み]【指摘】JavaDocに「引数で与えられたチェック文字列が対象文字列に含まれるかを判定します。」とありますが、
　　　　実際には第１引数と第２引数の意味が逆になっている気がします。
⇒ｺﾒﾝﾄ修正漏れ。修正しました。
【提案】テストケース名がtestCase1,2...となっています。名前に意味を持たせた方が可読性が上がると思います。
⇒同上。

■共通クラス
【提案】SampleCommonUtilsの端数処理タイプが２種類しかないです。java.math.RoundingModeとかで他タイプも指定出来るようにするのは如何でしょうか？

